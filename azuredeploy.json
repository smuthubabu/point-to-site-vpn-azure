{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "virtualNetworkName": {
          "type": "string",
          "defaultValue": "Vnet",
          "metadata": {
              "description": "Name of the VNet."
          }
      },
      "vnetAddressPrefix": {
          "type": "string",
          "defaultValue": "192.168.0.0/16",
          "metadata": {
              "description": "Address space for the VNet."
          }
      },
      "gatewaySubnetPrefix": {
          "type": "string",
          "defaultValue": "192.168.200.0/24",
          "metadata": {
              "description": "The prefix for the GatewaySubnet where the VirtualNetworkGateway will be deployed. This must be at least /29."
          }
      },
      "gatewayPublicIPName": {
          "type": "string",
          "defaultValue": "VnetPip",
          "metadata": {
              "description": "The name of the PublicIP attached to the VirtualNetworkGateway."
          }
      },
      "gatewayName": {
          "type": "string",
          "defaultValue": "VnetGw",
          "metadata": {
              "description": "The name of the VirtualNetworkGateway."
          }
      },
      "gatewaySku": {
          "type": "string",
          "defaultValue": "Standard",
          "metadata": {
              "description": "The Sku of the Gateway. This must be one of Basic, Standard or HighPerformance."
          }
      },
      "vpnClientAddressPoolPrefix": {
          "type": "string",
          "defaultValue": "172.16.201.0/24",
          "metadata": {
              "description": "The IP address range from which VPN clients will receive an IP address when connected. Range specified must not overlap with on-premise network."
          }
      },
      "vpnClientCustomRoutes": {
          "type": "array",
          "defaultValue": [ 
            "192.168.3.0/24",
            "192.168.4.0/24"
        ],
          "metadata": {
              "description": "IP addres that was obtained in previous step. Custom routes IP address range specified by customer to set on Gateway and Vpn clients. This should be the Storage account IP. Get this by running nslookup <StorageAccountName>.file.core.windows.net"
          }       
      },
      "clientRootCertName": {
          "type": "string",
          "defaultValue": "P2SRootCert",
          "metadata": {
              "description": "The name of the client root certificate used to authenticate VPN clients. This is a common name used to identify the root cert."
          }
      },
      "clientRootCertData": {
          "type": "string",
          "metadata": {
              "description": "Client root certificate data used to authenticate VPN clients."
          }
      }
  },
  "variables": {
      "gatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'GatewaySubnet')]"
  },
  "resources": [
      {
          "apiVersion": "2018-04-01",
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[parameters('virtualNetworkName')]",
          "location": "[resourceGroup().location]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "[parameters('vnetAddressPrefix')]"
                  ]
              },
              "subnets": [
                  {
                      "name": "GatewaySubnet",
                      "properties": {
                          "addressPrefix": "[parameters('gatewaySubnetPrefix')]",
                          "serviceEndpoints": [
                              {
                                  "service": "Microsoft.Storage"
                              }
                          ]
                      }
                  }
              ]
          }
      },
      {
          "apiVersion": "2018-04-01",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[parameters('gatewayPublicIPName')]",
          "location": "[resourceGroup().location]",
          "properties": {
              "publicIPAllocationMethod": "Dynamic"
          }
      },
      {
          "apiVersion": "2018-04-01",
          "type": "Microsoft.Network/virtualNetworkGateways",
          "name": "[parameters('gatewayName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
              "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
              "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "properties": {
                          "privateIPAllocationMethod": "Dynamic",
                          "subnet": {
                              "id": "[variables('gatewaySubnetRef')]"
                          },
                          "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
                          }
                      },
                      "name": "vnetGatewayConfig"
                  }
              ],
              "sku": {
                  "name": "[parameters('gatewaySku')]",
                  "tier": "[parameters('gatewaySku')]"
              },
              "gatewayType": "Vpn",
              "vpnType": "RouteBased",
              "enableBgp": "false",
              "customRoutes": {
                  "addressPrefixes": "[parameters('vpnClientCustomRoutes')]"
              },
              "vpnClientConfiguration": {
                  "vpnClientAddressPool": {
                      "addressPrefixes": [
                          "[parameters('vpnClientAddressPoolPrefix')]"
                      ]
                  },
                  "vpnClientProtocols": [
                      "IKEv2"
                  ],
                  "vpnClientRootCertificates": [
                      {
                          "name": "[parameters('clientRootCertName')]",
                          "properties": {
                              "PublicCertData": "[parameters('clientRootCertData')]"
                          }
                      }
                  ]
              }
          }
      }
  ]
}